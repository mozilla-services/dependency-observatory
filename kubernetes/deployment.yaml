apiVersion: v1
kind: ServiceAccount
metadata:
  name: job-runner
  namespace: default

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: job-admin
rules:
- apiGroups: ["batch", "extensions"]
  resources: ["jobs"]
  verbs: ["read", "list", "watch", "create", "update", "patch", "replace", "delete"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: job-runners-are-job-admins
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: job-admin
subjects:
- kind: ServiceAccount
  name: job-runner # "name" is case sensitive

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: api
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 (HEAD)
      labels:
        io.kompose.service: api
    spec:
      containers:
      - args:
        - "migrate"
        - "print-db-revision"
        - "web-dev"
        env:
        - name: FLASK_APP
          value: depobs.website.wsgi:app
        - name: FLASK_ENV
          value: development
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "8000"
        - name: PROCS
          value: "4"
        - name: THREADS
          value: "1"
        - name: SQLALCHEMY_DATABASE_URI
          value: postgresql+psycopg2://postgres:postgres@db/dependency_observatory
        image: mozilla/dependency-observatory
        imagePullPolicy: IfNotPresent
        name: dependency-observatory-api
        ports:
        - containerPort: 8000
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
status: {}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: api
  name: api
spec:
  ports:
  - name: "8000"
    port: 8000
    targetPort: 8000
  selector:
    io.kompose.service: api
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 (HEAD)
      labels:
        io.kompose.service: db
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: dependency_observatory
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: POSTGRES_USER
          value: postgres
        image: postgres:12
        imagePullPolicy: IfNotPresent
        name: dependency-observatory-db
        ports:
        - containerPort: 5432
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: db
  name: db
spec:
  ports:
  - name: "5432"
    port: 5432
    targetPort: 5432
  selector:
    io.kompose.service: db
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: worker
  name: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: worker
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 (HEAD)
      labels:
        io.kompose.service: worker
    spec:
      containers:
      - args:
        # - "init-gcloud-creds"
        - "worker"
        env:
        - name: FLASK_APP
          value: depobs.website.wsgi:app
        - name: FLASK_ENV
          value: development
        - name: SQLALCHEMY_DATABASE_URI
          value: postgresql+psycopg2://postgres:postgres@db/dependency_observatory
        - name: GCP_PROJECT_ID
          value: moz-fx-depobs-nonprod-b54b
        - name: JOB_STATUS_PUBSUB_TOPIC
          value: job-status-dev
        - name: JOB_STATUS_PUBSUB_SUBSCRIPTION
          value: job-status-dev
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/var/secrets/google/key.json"
        image: mozilla/dependency-observatory
        imagePullPolicy: IfNotPresent
        name: dependency-observatory-worker
        ports:
        - containerPort: 8000
        resources: {}
        volumeMounts:
          - name: google-cloud-key
            mountPath: /var/secrets/google
      restartPolicy: Always
      serviceAccountName: job-runner
      volumes:
      - name: google-cloud-key
        secret:
          secretName: dev-local-service-account
status: {}
